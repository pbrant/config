--langdef=scala
--langmap=scala:.scala
--regex-scala=/^[ \t]*((abstract|final|sealed|implicit|lazy|private|protected|\[[a-zA-Z0-9\.]+\])[ \t]*)*class[ \t]+([a-zA-Z0-9_]+)/\3/c,classes/
--regex-scala=/^[ \t]*((abstract|final|sealed|implicit|lazy|private|protected|\[[a-zA-Z0-9\.]+\])[ \t]*)*object[ \t]+([a-zA-Z0-9_]+)/\3/c,objects/
--regex-scala=/^[ \t]*((abstract|final|sealed|implicit|lazy|private|protected|\[[a-zA-Z0-9\.]+\])[ \t]*)*case class[ \t]+([a-zA-Z0-9_]+)/\3/c,case classes/
--regex-scala=/^[ \t]*((abstract|final|sealed|implicit|lazy|private|protected|\[[a-zA-Z0-9\.]+\])[ \t]*)*case object[ \t]+([a-zA-Z0-9_]+)/\3/c,case objects/
--regex-scala=/^[ \t]*((abstract|final|sealed|implicit|lazy|private|protected|\[[a-zA-Z0-9\.]+\])[ \t]*)*trait[ \t]+([a-zA-Z0-9_]+)/\3/t,traits/
--regex-scala=/^[ \t]*type[ \t]+([a-zA-Z0-9_]+)/\1/T,types/
--regex-scala=/^[ \t]*((abstract|final|sealed|implicit|lazy|override|protected|private|\[[a-zA-Z0-9\.]+\])[ \t]*)*def[ \t]+([a-zA-Z0-9_]+)/\3/m,methods/
--regex-scala=/^[ \t]*((abstract|final|sealed|implicit|lazy|override|protected|private|\[[a-zA-Z0-9\.]+\])[ \t]*)*val[ \t]+([a-zA-Z0-9_]+)/\3/l,constants/
--regex-scala=/^[ \t]*((abstract|final|sealed|implicit|lazy|override|protected|private|\[[a-zA-Z0-9\.]+\])[ \t]*)*var[ \t]+([a-zA-Z0-9_]+)/\3/l,variables/
--regex-scala=/^[ \t]*package[ \t]+([a-zA-Z0-9_.]+)/\1/p,packages/ 
--langmap=Lisp:+.clj.cljs
